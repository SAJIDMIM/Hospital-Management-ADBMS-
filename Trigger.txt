Patient Table Trigger
sql
Copy code
CREATE OR REPLACE TRIGGER trg_patient_before_insert
BEFORE INSERT ON Patient
FOR EACH ROW
BEGIN
    -- Example: Ensure PatientID is positive
    IF :NEW.PatientID <= 0 THEN
        RAISE_APPLICATION_ERROR(-20001, 'PatientID must be positive');
    END IF;
END;
/
2. Doctor Table Trigger
sql
Copy code
CREATE OR REPLACE TRIGGER trg_doctor_before_insert
BEFORE INSERT ON Doctor
FOR EACH ROW
BEGIN
    -- Example: Ensure DoctorID is positive
    IF :NEW.DoctorID <= 0 THEN
        RAISE_APPLICATION_ERROR(-20002, 'DoctorID must be positive');
    END IF;
END;
/
3. Payment Table Trigger
sql
Copy code
CREATE OR REPLACE TRIGGER trg_payment_before_insert
BEFORE INSERT ON Payment
FOR EACH ROW
BEGIN
    -- Example: Ensure PaymentID is positive
    IF :NEW.PaymentID <= 0 THEN
        RAISE_APPLICATION_ERROR(-20003, 'PaymentID must be positive');
    END IF;
END;
/
4. Room Table Trigger
sql
Copy code
CREATE OR REPLACE TRIGGER trg_room_before_insert
BEFORE INSERT ON Room
FOR EACH ROW
BEGIN
    -- Example: Ensure RoomID is positive
    IF :NEW.RoomID <= 0 THEN
        RAISE_APPLICATION_ERROR(-20004, 'RoomID must be positive');
    END IF;
END;
/
5. Appointment Table Trigger
sql
Copy code
CREATE OR REPLACE TRIGGER trg_appointment_before_insert
BEFORE INSERT ON Appointment
FOR EACH ROW
BEGIN
    -- Example: Ensure AppointmentID is positive
    IF :NEW.AppointmentID <= 0 THEN
        RAISE_APPLICATION_ERROR(-20005, 'AppointmentID must be positive');
    END IF;
END;
/
6. Surgery Table Trigger
sql
Copy code
CREATE OR REPLACE TRIGGER trg_surgery_before_insert
BEFORE INSERT ON Surgery
FOR EACH ROW
BEGIN
    -- Example: Ensure SurgeryID is positive
    IF :NEW.SurgeryID <= 0 THEN
        RAISE_APPLICATION_ERROR(-20006, 'SurgeryID must be positive');
    END IF;
END;
/
7. Ward Table Trigger
sql
Copy code
CREATE OR REPLACE TRIGGER trg_ward_before_insert
BEFORE INSERT ON Ward
FOR EACH ROW
BEGIN
    -- Example: Ensure WardID is positive
    IF :NEW.WardID <= 0 THEN
        RAISE_APPLICATION_ERROR(-20007, 'WardID must be positive');
    END IF;
END;
/



Main Admin Table Trigger
sql
Copy code
CREATE OR REPLACE TRIGGER trg_main_admin_before_insert
BEFORE INSERT ON MainAdmin
FOR EACH ROW
BEGIN
    -- Example: Ensure AdminID is positive
    IF :NEW.AdminID <= 0 THEN
        RAISE_APPLICATION_ERROR(-20001, 'AdminID must be positive');
    END IF;
END;
/
2. Surgery Admin Table Trigger
sql
Copy code
CREATE OR REPLACE TRIGGER trg_surgery_admin_before_insert
BEFORE INSERT ON SurgeryAdmin
FOR EACH ROW
BEGIN
    -- Example: Ensure AdminID is positive
    IF :NEW.AdminID <= 0 THEN
        RAISE_APPLICATION_ERROR(-20002, 'AdminID must be positive');
    END IF;
END;
/
3. Ward Admin Table Trigger
sql
Copy code
CREATE OR REPLACE TRIGGER trg_ward_admin_before_insert
BEFORE INSERT ON WardAdmin
FOR EACH ROW
BEGIN
    -- Example: Ensure AdminID is positive
    IF :NEW.AdminID <= 0 THEN
        RAISE_APPLICATION_ERROR(-20003, 'AdminID must be positive');
    END IF;
END;
/
4. Patient Admin Table Trigger
sql
Copy code
CREATE OR REPLACE TRIGGER trg_patient_admin_before_insert
BEFORE INSERT ON PatientAdmin
FOR EACH ROW
BEGIN
    -- Example: Ensure AdminID is positive
    IF :NEW.AdminID <= 0 THEN
        RAISE_APPLICATION_ERROR(-20004, 'AdminID must be positive');
    END IF;
END;
/
5. Doctor Admin Table Trigger
sql
Copy code
CREATE OR REPLACE TRIGGER trg_doctor_admin_before_insert
BEFORE INSERT ON DoctorAdmin
FOR EACH ROW
BEGIN
    -- Example: Ensure AdminID is positive
    IF :NEW.AdminID <= 0 THEN
        RAISE_APPLICATION_ERROR(-20005, 'AdminID must be positive');
    END IF;
END;
/